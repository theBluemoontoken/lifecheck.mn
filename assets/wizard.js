document.addEventListener("DOMContentLoaded", () => {
  const intro = document.querySelector(".intro");
  const testSection = document.querySelector(".test");
  const resultSection = document.querySelector(".result");
  const startBtn = document.querySelector(".start-btn");
  const questions = document.querySelectorAll(".question-card");
  const tooltip = document.getElementById("wizard-comment");
  const progressText = document.getElementById("progress-text");

  let currentIndex = 0;
  let scores = { lowcarb: 0, balanced: 0, cleanse: 0 };

  const wizardComments = [
    "–°–æ–Ω–≥–æ–ª—Ç –±“Ø—Ä —á–∏–Ω—å —á–∞–º–∞–π–≥ –≥—ç—Ä—ç–ª —Ä“Ø“Ø –æ–π—Ä—Ç—É—É–ª–∞—Ö —É—É, —ç—Å–≤—ç–ª —Ö–∞—Ä–∞–Ω—Ö—É–π–¥ —Ç“Ø–ª—Ö—ç—Ö “Ø“Ø –≥—ç–¥–≥–∏–π–≥ —à–∏–π–¥–Ω—ç.",
  "–≠–Ω—ç –∞—Å—É—É–ª—Ç–∞–¥ ”©–≥—Å”©–Ω —Ö–∞—Ä–∏—É–ª—Ç —á–∏–Ω—å —á–∏–Ω–∏–π —Å—ç—Ç–≥—ç–ª–∏–π–Ω –∂–∏–Ω—Ö—ç–Ω—ç –≥–∞–ª—ã–≥ –∏–ª—á–∏–ª–Ω—ç.",
  "–•—ç—Ä—ç–≤ —á–∏ —ç–Ω—ç –∞—Å—É—É–ª—Ç–∞–∞—Å –∑—É–≥—Ç–≤–∞–ª —Ö—É–≤—å –∑–∞—è–∞ —á–∏–Ω—å ”©”©—Ä”©”© —á–∞–º–∞–∞—Å –∑—É–≥—Ç–∞—Ö –±–æ–ª–Ω–æ.",
  "–û–ª–æ–Ω “Ø–≥ —à–∞–∞—Ä–¥–ª–∞–≥–∞–≥“Ø–π‚Ä¶ –∑”©–≤—Ö”©–Ω —á–∏–Ω–∏–π —Ö–∞—Ä–∏—É–ª—Ç –ª –∂–∏–Ω—Ö—ç–Ω—ç “Ø–Ω—ç–Ω–∏–π–≥ —Ö—ç–ª–Ω—ç.",
  "–≠–Ω–¥—ç—ç—Å —á–∏ ”©”©—Ä–∏–π–Ω –∞–º—å–¥—Ä–∞–ª—ã–Ω –≥—É–Ω–∏–≥—Ç —ç—Å–≤—ç–ª –±–∞–∞—Ç–∞—Ä–ª–∞–≥ –∑–∞–º—ã–≥ —Ö–∞—Ä–Ω–∞.",
  "–ß–∏ –±–æ–¥–ª–æ–æ –Ω—É—É–∂ —á–∞–¥–Ω–∞ –≥—ç–∂ “Ø“Ø? –ì—ç–≤—á –º–∏–Ω–∏–π –±”©–º–±”©–ª”©–≥ –±“Ø—Ö–Ω–∏–π–≥ —Ö–∞—Ä–¥–∞–≥.",
  "–≠–Ω—ç –±–æ–ª –∑“Ø–≥—ç—ç—Ä –Ω—ç–≥ –∞—Å—É—É–ª—Ç –±–∏—à, —ç–Ω—ç –±–æ–ª —á–∏–Ω–∏–π —Å–æ—Ä–∏–ª—ã–Ω —ç—Ä—Ç–Ω–∏–π —Ç“Ø–ª—Ö“Ø“Ø—Ä —é–º.",
  "–•–∞—Ä–∏—É–ª—Ç–∞–∞ –±–æ–ª–≥–æ–æ–º–∂—Ç–æ–π —Å–æ–Ω–≥–æ ‚Äî —É—É–ª—Å—ã–Ω —á–∏–º—ç—ç–≥“Ø–π –±–∞–π–¥–∞–ª —á–∞–º–∞–π–≥ —Å–æ–Ω—Å–æ–∂ –±–∞–π–Ω–∞.",
  "–ó“Ø—Ä—Ö —á–∏–Ω—å —Ö—É–¥–ª–∞–∞ —Ö—ç–ª–¥—ç–≥–≥“Ø–π. –•–∞—Ä–∏–Ω —á–∏ —Å–æ–Ω—Å–æ—Ö –∑–æ—Ä–∏–≥—Ç–æ–π —é—É?",
  "–≠–Ω—ç –±–æ–ª —ç—Ü—Å–∏–π–Ω —Å–æ—Ä–∏–ª—ã–Ω ”©–º–Ω”©—Ö —Å“Ø“Ø–¥—ç—Ä. –ë–æ–¥–æ–∂, —Ö–∞—Ä–∏—É–ª–∞–∞–¥ —Ü–∞–∞—à –∞–ª—Ö."
  ];

  const guides = {
    lowcarb: {
      title: "üî• –ì“Ø–∑—ç—ç–≥—ç—ç –®–∞—Ç–∞–∞ ‚Äî 20 —Ö—É—É–¥–∞—Å Low-Carb –≥–∞—Ä—ã–Ω –∞–≤–ª–∞–≥–∞",
      img: "../images/lowcarb.png",
      content: `‚Äú50–≥—Ä-—ã–Ω –¥“Ø—Ä—ç–º‚Äù-—ç—ç—Ä —ç—Ö–ª—ç—ç–¥ –Ω“Ø“Ø—Ä—Å —É—Å–∞–∞ —ç—Ä—Å –±–∞–≥–∞—Å–≥–∞–∂, –º–∞—Ö, ”©–Ω–¥”©–≥, –Ω–æ–≥–æ–æ —Ç“Ø—à–∏–≥–ª—ç—Å—ç–Ω —Ö—è–ª–±–∞—Ä —Ç”©–ª”©–≤–ª”©–≥”©”©.
      –•“Ø–Ω—Å–Ω–∏–π –¥—ç–ª–≥“Ø“Ø—Ä—Ç —é—É –∞–≤–∞—Ö–∞–∞ –º—ç–¥—ç—Ö–≥“Ø–π –±–∞–π–Ω–∞ —É—É? Cheat sheet-—ç—ç—Ä—ç—ç –≥–∞—Ä –¥–æ—Ä—Ö–æ–æ—Å–æ–æ —Ö–∞—Ä–∞–∞–¥ –∞–≤.
      7 —Ö–æ–Ω–æ–≥–∏–π–Ω ”©–≥–ª”©”©, ”©–¥”©—Ä, –æ—Ä–æ–π–Ω —Ü—ç—Å —Ö“Ø—Ä—Ç—ç–ª –±—ç–ª—ç–Ω!`,
      pr: "‚ú® –•—ç—Ä—ç–≤ —á–∏ ”©–Ω”©”©–¥—Ä”©”©—Å –ª ‚Äú–≥“Ø–∑—ç—ç–≥—ç—ç —à–∞—Ç–∞–∞—Ö‚Äù –∑–æ—Ä–∏–≥—Ç–æ–π –∞–ª—Ö–∞–º —Ö–∏–π—Ö –≥—ç–∂ –±–∞–π–≥–∞–∞ –±–æ–ª —ç–Ω—ç —Å—É–¥–∞—Ä –±–æ–ª —á–∏–Ω–∏–π —Ö–∞–º–≥–∏–π–Ω —Ö“Ø—á—Ç—ç–π –∑—ç–≤—Å—ç–≥."
    },
    balanced: {
      title: "ü•ó –ò–¥—ç—ç–¥ –ª –¢—É—Ä ‚Äî 18 —Ö—É—É–¥–∞—Å Calorie Deficit –≥–∞—Ä—ã–Ω –∞–≤–ª–∞–≥–∞",
      img: "../images/caloriedeficit.png",
      content: `–•–æ–æ–ª–æ–æ —Ö–∞—Å–∞—Ö –±–∏—à, –∑”©–≤ —Ö—ç–º–∂—ç—ç–≥—ç—ç—Ä –∏–¥—ç—Ö—ç–¥ –ª –∂–∏–Ω –±—É—É—Ä–¥–∞–≥ –≥—ç–¥–≥–∏–π–≥ —à–∏–Ω–∂–ª—ç—Ö —É—Ö–∞–∞–Ω–∞–∞—Ä –±–∞—Ç–∞–ª—Å–∞–Ω –∞—Ä–≥–∞—á–ª–∞–ª.
      ”®–¥”©—Ä—Ç —Ö—ç–¥—ç–Ω –∫–∞–ª–æ—Ä–∏ —à–∞—Ç–∞–∞–¥–∞–≥, —Ö—ç–¥–∏–π–≥ –∏–¥—ç–∂ –±–æ–ª–æ—Ö–æ–æ —Ç–æ–æ—Ü–æ–æ–¥, ”©–ª—Å–≥”©–ª”©–Ω–≥“Ø–π–≥—ç—ç—Ä –∞–∞–∂–º–∞–∞—Ä —Ç—É—Ä–∞–∞—Ä–∞–π.
      –§–∏—Ç–Ω–µ—Å –∑–∞–∞–ª–≥“Ø–π–≥—ç—ç—Ä —Ö”©–¥”©–ª–≥”©”©–Ω”©”© –Ω—ç–º—ç—Ö, –∞–ø–ø-–∞–∞—Ä —Ç–æ–æ—Ü–æ–æ–ª–æ—Ö –≥—ç—ç–¥ –±“Ø—Ö –∑–∞–ª—å –º—ç—Ö–∏–π–≥ –æ—Ä—É—É–ª—Å–∞–Ω.`,
      pr: "‚ú® ‚Äú–•–æ–æ–ª–æ–æ –∏–¥—ç—ç–¥ –ª —Ç—É—Ä–¥–∞–≥ —é–º –±–∞–π–Ω–∞ –≥—ç–¥—ç–≥ —á–∏–Ω—å –º–∏–Ω–∏–π —Ö–∞–π–∂ –±–∞–π—Å–∞–Ω –∞—Ä–≥–∞ —à“Ø“Ø!‚Äù –≥—ç–∂ —Ö—ç–ª—ç—Ö –º”©—á –æ–π—Ä—Ç–æ–∂ –±–∞–π–Ω–∞."
    },
    cleanse: {
      title: "üíß –•”©–Ω–≥”©—Ä”©—Ö –§–∏–ª–æ—Å–æ—Ñ–∏ ‚Äî 15 —Ö—É—É–¥–∞—Å Cleansing –≥–∞—Ä—ã–Ω –∞–≤–ª–∞–≥–∞",
      img: "../images/cleanse.png",
      content: `–ì—ç–¥—ç—Å –±”©–≥–ª”©—Ä”©–ª, —Ö–∞–≤–∞–Ω, —Ö–∏–π ‚Äî –±“Ø–≥–¥ —ç—Ä—á —Ö“Ø—á, —Å—ç—Ç–≥—ç–ª —Å–∞–Ω–∞–∞–Ω–¥ —à—É—É–¥ –Ω”©–ª”©”©–ª–¥”©–≥.
      –≠–Ω—ç —Å—É–¥–∞—Ä –Ω—å 3‚Äì5 —Ö–æ–Ω–æ–≥–∏–π–Ω —Ö”©—Ç”©–ª–±”©—Ä”©”©—Ä —É—Å, —à–∏—Ä—Ö—ç–≥–ª—ç–≥, –ø—Ä–æ–±–∏–æ—Ç–∏–∫–æ–æ—Ä –≥—ç–¥—Å–∏–π–≥ —Ü—ç–≤—ç—Ä–ª—ç—Ö –∞—Ä–≥–∞ –∑–∞–º—ã–≥ –±–∞–≥—Ç–∞–∞—Å–∞–Ω.
      ‚Äú–¶—ç–≤—ç—Ä –±–∏–µ = –¶—ç–≤—ç—Ä —Ç–∞—Ä—Ö–∏‚Äù –≥—ç–¥—ç–≥ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–æ—Ä —Ö”©–Ω–≥”©–Ω, —Ç–∞–π–≤–∞–Ω –º—ç–¥—Ä—ç–º–∂–∏–π–≥ ”©–≥”©—Ö –∑–æ—Ä–∏–ª–≥–æ—Ç–æ–π.`,
      pr: "‚ú® –ë–∏–µ—ç —Ü—ç–≤—ç—Ä–ª—ç—Ö—ç—ç—Ä –∑”©–≤—Ö”©–Ω –≥—ç–¥—ç—Å —á–∏–Ω—å –±–∏—à ‚Äî —Ç–∞—Ä—Ö–∏, —Å—ç—Ç–≥—ç–ª —á–∏–Ω—å —Ö“Ø—Ä—Ç—ç–ª —Ö”©–Ω–≥”©—Ä–¥”©–≥."
    }
  };

  // Start button
  startBtn.addEventListener("click", () => {
  intro.classList.add("hidden");
  testSection.classList.remove("hidden");
  showQuestion(currentIndex);

  // ‚úÖ Scroll always to top of test section
  testSection.scrollIntoView({ behavior: "smooth", block: "start" });
});

  // Show question
  function showQuestion(index) {
    questions.forEach((q, i) => {
      q.style.display = i === index ? "block" : "none";
    });
    if (wizardComments[index]) {
      tooltip.textContent = wizardComments[index];
    }
    progressText.textContent = `–°–æ—Ä–∏–ª—ã–Ω ${index + 1}-—Ä –∞–ª—Ö–∞–º `;
  }

  // Answer buttons
  questions.forEach((q, idx) => {
    q.querySelectorAll("button").forEach(btn => {
      btn.addEventListener("click", () => {
        scores[btn.dataset.score]++;
        currentIndex++;
        if (currentIndex < questions.length) {
          showQuestion(currentIndex);
        } else {
          showResult();
        }
      });
    });
  });

  // Show result
  function showResult() {
  const overlay = document.querySelector(".result-overlay");
  const overlayCrystal = overlay.querySelector(".overlay-crystal");
  const overlayText = overlay.querySelector(".overlay-text");

  testSection.classList.add("hidden");
  resultSection.classList.add("hidden");
  overlay.classList.add("show");
  overlayCrystal.classList.add("animate");
  overlayText.textContent = "–ó”©–≥–Ω”©–ª–∏–π–≥ —Ç–∞–π–ª–∂ –±–∞–π–Ω–∞...";

  setTimeout(() => {
    overlayText.textContent = "–°—É–¥—Ä—É—É–¥—ã–≥ –±—ç–ª–¥—ç–∂ –±–∞–π–Ω–∞...";
  }, 2500);

  setTimeout(() => {
    overlay.classList.remove("show");
    overlayCrystal.classList.remove("animate");

    renderResultContent(); 

    resultSection.classList.remove("hidden");
    resultSection.classList.add("show");
    resultSection.scrollIntoView({ behavior: "smooth" });

  }, 5000);
}

function renderResultContent() {
  resultSection.innerHTML = `
    <div class="container">
      <div class="result-animation fade-in" style="animation-delay:0s">
  <img src="../images/crystal.png" alt="Crystal Ball" class="crystal result-crystal">
  <h2>–®–∏–¥—ç—Ç –±”©–º–±”©–ª”©–≥–∏–π–Ω “Ø—Ä –¥“Ø–Ω –≥–∞—Ä–ª–∞–∞ üîÆ</h2>
  <p class="result-subtitle">–ß–∞–º–¥ –∑–æ—Ä–∏—É–ª–∞–≥–¥—Å–∞–Ω —à–∏–¥—ç—Ç –≥–∞—Ä—ã–Ω –∞–≤–ª–∞–≥–∞ –±–æ–ª...</p>
</div>
    </div>
  `;
  const container = resultSection.querySelector(".container");

  const maxType = Object.keys(scores).reduce((a, b) =>
    scores[a] > scores[b] ? a : b
  );
  const bonusTypes = Object.keys(scores).filter(t => t !== maxType);

  const main = guides[maxType];
  container.innerHTML += `
    <div class="main-scroll result-block fade-in" style="animation-delay:0.5s">
      <img src="${main.img}" alt="${main.title}" class="book-cover">
      <div class="result-info">
        <h3>${main.title}</h3>
        <p>${main.content}</p>
        <p class="pr-text">${main.pr}</p>
      </div>
    </div>
  `;

  container.innerHTML += `<h3 class="bonus-title fade-in" style="animation-delay:1s">–ù—ç–º—ç—ç–¥ 2-–∏–π–≥ “Ø–Ω—ç–≥“Ø–π –∞–≤ üéÅ</h3><div class="bonus-scrolls"></div>`;
  const bonusWrap = container.querySelector(".bonus-scrolls");

  bonusTypes.forEach((type, i) => {
    const g = guides[type];
    bonusWrap.innerHTML += `
      <div class="result-block fade-in" style="animation-delay:${1.5 + i * 0.5}s">
        <img src="${g.img}" alt="${g.title}" class="book-cover">
        <div class="result-info">
          <h4>${g.title}</h4>
          <p>${g.content}</p>
          <p class="pr-text">${g.pr}</p>
        </div>
      </div>
    `;
  });

  container.innerHTML += `
  <div class="email-claim fade-in" style="animation-delay:${1.5 + bonusTypes.length * 0.5}s">
    <label for="email-input">üìß –ò–º—ç–π–ª—ç—ç –æ—Ä—É—É–ª, —à–∏–¥—ç—Ç –≥–∞—Ä—ã–Ω –∞–≤–ª–∞–≥—É—É–¥—ã—à —á–∞–º–¥ –∏–ª–≥—ç—ç–Ω—ç.</label>
    <input type="email" id="email-input" placeholder="name@email.com" class="email-input">
    <button class="cta claim-btn">–®–∏–¥—ç—Ç –≥–∞—Ä—ã–Ω –∞–≤–ª–∞–≥—É—É–¥—ã–≥ –∞–≤–∞—Ö</button>
  </div>
`;
}

});

// Countdown —ç—Ö–ª“Ø“Ø–ª—ç—Ö —Ñ—É–Ω–∫—Ü
function startCountdown(duration, display) {
  let timer = duration, minutes, seconds;
  const interval = setInterval(() => {
    minutes = Math.floor(timer / 60);
    seconds = timer % 60;

    display.textContent =
      `${minutes.toString().padStart(2, "0")}:${seconds.toString().padStart(2, "0")}`;

    if (--timer < 0) {
      clearInterval(interval);
      display.textContent = "‚è≥ –î—É—É—Å—Å–∞–Ω";
    }
  }, 1000);
}

// Claim —Ç–æ–≤—á –¥–∞—Ä–∞—Ö–∞–¥ popup –Ω—ç—ç–∂, email –¥–∞–º–∂—É—É–ª–Ω–∞ + countdown —ç—Ö–ª“Ø“Ø–ª–Ω—ç
document.addEventListener("click", e => {
  if (e.target.classList.contains("claim-btn")) {
    const emailValue = document.getElementById("email-input").value.trim();

    if (!emailValue) {
      alert("üìß –ò–º—ç–π–ª—ç—ç –æ—Ä—É—É–ª–Ω–∞ —É—É!");
      return;
    }

    const popup = document.querySelector(".pay-popup");
    popup.classList.remove("hidden");

    document.getElementById("pay-email").textContent = emailValue;

    const advNumber = "LCW-" + new Date().getTime().toString().slice(-6);
    document.getElementById("pay-number").textContent = advNumber;

    const countdownDisplay = document.getElementById("countdown");
    startCountdown(15 * 60, countdownDisplay);
  }
  if (e.target.classList.contains("close-btn")) {
    document.querySelector(".pay-popup").classList.add("hidden");
  }
});
// –¢—É—Ä—à–∏–ª—Ç—ã–Ω –∏–ª–≥—ç—ç—Ö —Ç–æ–≤—á
document.getElementById("test-send").addEventListener("click", () => {
  const email = document.getElementById("email-input").value.trim();
  if (!email) {
    alert("–≠—Ö–ª—ç—ç–¥ email –æ—Ä—É—É–ª–Ω–∞ —É—É!");
    return;
  }

  fetch("/api/sendWizardReport", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ email })
  })
    .then(res => res.json())
    .then(data => {
      if (data.ok) {
        alert("‚úÖ –¢—É—Ä—à–∏–ª—Ç—ã–Ω PDF –∞–º–∂–∏–ª—Ç—Ç–∞–π –∏–ª–≥—ç—ç–≥–¥–ª—ç—ç: " + email);
      } else {
        alert("‚ùå –ò–ª–≥—ç—ç—Ö—ç–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞");
      }
    })
    .catch(err => {
      console.error("Send error:", err);
      alert("‚ùå –ò–ª–≥—ç—ç—Ö—ç–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞");
    });
});

