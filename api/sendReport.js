import PDFDocument from "pdfkit";
import nodemailer from "nodemailer";
import { REPORT_CONTENT } from "../assets/reportContent.js"; // –∑–∞–º—ã–≥ –∑”©–≤ —Ç–∞–∞—Ä—É—É–ª–Ω–∞ —É—É

export default async function handler(req, res) {
  if (req.method !== "POST") {
    return res.status(405).json({ error: "Only POST allowed" });
  }

  const {
    name,
    email,
    testName,
    testKey = "burnout",
    score,
    risk = "low",
    topAnswers = []
  } = req.body;

  try {
    // 1) PDF –±—ç–ª—Ç–≥—ç—Ö
    const doc = new PDFDocument({ margin: 50 });
    const chunks = [];
    doc.on("data", (c) => chunks.push(c));
    doc.on("end", async () => {
      const pdfBuffer = Buffer.concat(chunks);

      // 2) –ò–º—ç–π–ª –∏–ª–≥—ç—ç—Ö
      const transporter = nodemailer.createTransport({
        service: "gmail",
        auth: {
          user: process.env.MAIL_USER,
          pass: process.env.MAIL_PASS,
        },
      });

      await transporter.sendMail({
      from: `"LifeCheck" <${process.env.MAIL_USER}>`,
      to: email,
      subject: `üìä –¢–∞–Ω—ã ${testName} —Ç–∞–π–ª–∞–Ω`,
      text: `${name || "–•—ç—Ä—ç–≥–ª—ç–≥—á"}-–∏–π–Ω ${testName} —Ç–∞–π–ª–∞–Ω —Ö–∞–≤—Å—Ä–∞–ª—Ç–∞–¥ –±–∞–π–Ω–∞.`,
      attachments: [
      {
      filename: `${testName}-report.pdf`,
      content: pdfBuffer.toString("base64"),
      encoding: "base64"
      }
    ],
  });

      

      res.status(200).json({ success: true, message: "Report emailed" });
    });

    // 3) PDF –∫–æ–Ω—Ç–µ–Ω—Ç ‚Äî Cover sheet
    doc.fontSize(20).fillColor("#f97316").text("LifeCheck Report", { align: "center" });
    doc.moveDown();
    doc.fontSize(14).fillColor("black").text(`–¢–µ—Å—Ç: ${testName}`);
    doc.text(`–ù—ç—Ä: ${name || "-"}`);
    doc.text(`–ò–º—ç–π–ª: ${email || "-"}`);
    doc.text(`–û–Ω–æ–æ: ${score || "-"}`);
    doc.text(`Risk level: ${risk || "-"}`);
    if (topAnswers.length) {
      doc.moveDown().fontSize(14).text("–•–∞–º–≥–∏–π–Ω —á—É—Ö–∞–ª —Ö–∞—Ä–∏—É–ª—Ç—É—É–¥:");
      topAnswers.forEach((ans, i) => doc.text(`${i + 1}. ${ans}`));
    }

    // 4) Report content (reportContent.js-—ç—ç—Å)
    const block = REPORT_CONTENT?.[testKey]?.[risk] || {};
    doc.addPage();

    doc.fontSize(16).fillColor("#f97316").text("–î—ç–ª–≥—ç—Ä—ç–Ω–≥“Ø–π —à–∏–Ω–∂–∏–ª–≥—ç—ç", { underline: true });
    doc.moveDown(0.5).fontSize(12).fillColor("black").text(block.analysis || "", { align: "justify" });

    doc.moveDown().fontSize(16).fillColor("#f97316").text("–•—É–≤–∏–π–Ω –∑”©–≤–ª”©–º–∂“Ø“Ø–¥", { underline: true });
    doc.moveDown(0.5).fontSize(12).fillColor("black").text(block.advice || "", { align: "justify" });

    doc.moveDown().fontSize(16).fillColor("#f97316").text("–î“Ø–≥–Ω—ç–ª—Ç", { underline: true });
    doc.moveDown(0.5).fontSize(12).fillColor("black").text(block.conclusion || "", { align: "justify" });

    doc.moveDown().fontSize(16).fillColor("#f97316").text("Motivation boost", { underline: true });
    doc.moveDown(0.5).fontSize(12).fillColor("black").text(block.motivation || "", { align: "justify" });

    if (block.disclaimer) {
      doc.moveDown().fontSize(10).fillColor("gray").text(block.disclaimer, { align: "justify" });
    }

    doc.end();
  } catch (err) {
    console.error(err);
    res.status(500).json({ error: "Failed to generate PDF" });
  }
}
