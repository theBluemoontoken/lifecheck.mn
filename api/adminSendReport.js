import handler from "./sendReport"; // —Ç–∞–π–ª–∞–Ω –∏–ª–≥—ç—ç—Ö “Ø–Ω–¥—Å—ç–Ω —Ñ—É–Ω–∫—Ü

export default async function adminSend(req, res) {
  try {
    if (req.method !== "POST") {
      return res.status(405).json({ ok: false, error: "Method not allowed" });
    }

    // üîê Admin key —à–∞–ª–≥–∞—Ö
    const authHeader = req.headers.authorization || "";
    const token = authHeader.replace("Bearer ", "");
    if (token !== process.env.ADMIN_KEY) {
      return res.status(403).json({ ok: false, error: "Unauthorized" });
    }

    // sendReport-–¥ –¥–∞–º–∂—É—É–ª–∞—Ö–¥–∞–∞ "source" —Ç–∞–ª–±–∞—Ä—ã–≥ admin –≥—ç–∂ —Ç—ç–º–¥—ç–≥–ª—ç–µ
    req.body = { ...(req.body || {}), source: "admin" };

    // ‚úÖ –¢–ê–ô–õ–ê–ù–ì sendReport-–æ–æ—Ä –∏–ª–≥—ç—ç–Ω—ç (sendReport –¥–æ—Ç–æ—Ä saveLog –¥—É—É–¥–Ω–∞)
    return await handler(req, res);
  } catch (err) {
    console.error("‚ùå Admin override error:", err);
    return res.status(500).json({ ok: false, error: "Admin override failed" });
  }
}
